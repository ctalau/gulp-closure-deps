var Buffer = require('buffer').Buffer;
var gutil = require('gulp-util');
var path = require('path');
var through = require('through');

const PLUGIN_NAME = 'gulp-closure-deps';

var blockCommentRegex = /\/\*[^]*?\*\//g;
var provideRegex = /^\s*goog\.provide\(\s*['"](.+?)['"]\s*\)/;
var requireRegex = /^\s*goog\.require\(\s*['"](.+?)['"]\s*\)/;

var getMatches = function(contentsLines, regex) {
  var matches = [];
  contentsLines.forEach(function(line) {
    var match = line.match(regex);
    if (!match || matches.indexOf(match[1]) > -1) return;
    matches.push(match[1]);
  });
  matches.sort();
  return matches;
};

var argify = function(array) {
  return array.map(function(item) {
    return '\''+ item + '\'';
  }).join(', ');
};

module.exports = function(opt) {
  opt = opt || {};
  var fileName = opt.fileName || 'deps.js';
  var files = [];
  var prefix = opt.prefix || '';

  function bufferContents(file) {
    if (file.isNull()) return;
    if (file.isStream()) {
      return this.emit('error',
        new gutil.PluginError(PLUGIN_NAME, 'Streaming not supported'));
    }
    files.push(file);
  }

  function endStream() {
    if (!files.length) return this.emit('end');
    var firstFile = files[0];
    var lines = [];

    files.forEach(function(file) {
      var depsPath = path.join(prefix, file.path.replace(file.cwd, ''))
        // Fix Windows.
        .replace(/\\/g, '/');
      var provides;
      var requires;
      var contents = file.contents.toString();

      // Goog base.js provides goog implicitly.
      if (contents.indexOf('* @provideGoog') != -1) {
        provides = ['goog'];
        requires = [];
      }
      else {
        // Remove block comments to ignore commented goog.provide and goog.require.
        // http://stackoverflow.com/a/2458858/233902
        var contentsLines = contents
          .replace(blockCommentRegex, '')
          .split(gutil.linefeed);
        provides = getMatches(contentsLines, provideRegex);
        if (!provides.length) return;
        requires = getMatches(contentsLines, requireRegex);
      }

      var line = 'goog.addDependency(\'%depsPath\', [%provides], [%requires]);';
      line = line.replace('%depsPath', depsPath);
      line = line.replace('%provides', argify(provides));
      line = line.replace('%requires', argify(requires));

      lines.push(line);
    });

    // Sort to have the same order as depswriter.py has.
    lines.sort();

    var contents = [
      '// This file was autogenerated by gulp-closure-deps plugin.',
      '// Please do not edit.'
    ].concat(lines);

    var depsFile = new gutil.File({
      base: firstFile.base,
      contents: new Buffer(contents.join(gutil.linefeed)),
      cwd: firstFile.cwd,
      path: path.join(firstFile.base, fileName)
    });

    this.emit('data', depsFile);
    this.emit('end');
  }

  return through(bufferContents, endStream);
};
